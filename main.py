#!/usr/bin/env python3
"""
ü§ñ OF Assistant Bot - –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
Powered by DeepSeek-R1

Telegram –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è OnlyFans —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º AI
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))

try:
    from telebot.async_telebot import AsyncTeleBot
    from telebot import asyncio_filters
    from config import config
    from handlers import setup_handlers
    from enhanced_logging import BotLogger
    from api_handler import deepseek_handler
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
logger = BotLogger(
    log_dir="logs",
    log_file="main.log", 
    logger_name="MainBot"
)

class OFAssistantBot:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å OF Assistant Bot"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.bot = None
        self.handlers = None
        
    async def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        try:
            logger.log_info("üöÄ –ó–∞–ø—É—Å–∫ OF Assistant Bot...")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            if not config.TELEGRAM_BOT_TOKEN:
                logger.log_error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                print("‚ùå –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ —Ñ–∞–π–ª .env")
                return False
                
            if not config.DEEPSEEK_API_KEY:
                logger.log_error("‚ùå DEEPSEEK_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                print("‚ùå –î–æ–±–∞–≤—å—Ç–µ DEEPSEEK_API_KEY –≤ —Ñ–∞–π–ª .env")
                return False
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
            self.bot = AsyncTeleBot(
                token=config.TELEGRAM_BOT_TOKEN,
                parse_mode='HTML'
            )
            logger.log_info("‚úÖ Telegram bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            self.handlers = setup_handlers(self.bot)
            logger.log_info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            
            # –¢–µ—Å—Ç DeepSeek
            test_response = await deepseek_handler.ask_deepseek("–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            if test_response:
                logger.log_info("‚úÖ DeepSeek API –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                logger.log_warning("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å DeepSeek API")
            
            return True
            
        except Exception as e:
            logger.log_error(f"üí• –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            return False
    
    async def start_polling(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling"""
        try:
            logger.log_info("üîÑ –ó–∞–ø—É—Å–∫ polling...")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
            bot_info = await self.bot.get_me()
            logger.log_info(f"ü§ñ –ë–æ—Ç @{bot_info.username} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            print(f"\nüî• OF Assistant Bot –∑–∞–ø—É—â–µ–Ω!")
            print(f"ü§ñ –ë–æ—Ç: @{bot_info.username}")
            print(f"üß† AI: DeepSeek-R1")
            print(f"üíï –ì–æ—Ç–æ–≤ –∫ —Å–æ–±–ª–∞–∑–Ω–µ–Ω–∏—é!")
            print(f"\nüì± –ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥: /start")
            print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C\n")
            
            # –ó–∞–ø—É—Å–∫
            await self.bot.polling(non_stop=True, timeout=60)
            
        except KeyboardInterrupt:
            logger.log_info("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            await self.shutdown()
        except Exception as e:
            logger.log_error(f"üí• –û—à–∏–±–∫–∞ polling: {e}")
            await self.shutdown()
    
    async def shutdown(self):
        """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
        try:
            logger.log_info("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
            
            if hasattr(self.handlers, 'scheduler'):
                self.handlers.scheduler.shutdown()
                logger.log_info("‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            if self.bot:
                await self.bot.close_session()
                logger.log_info("üîå –°–µ—Å—Å–∏—è Telegram –∑–∞–∫—Ä—ã—Ç–∞")
            
            logger.log_info("‚úÖ –ë–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
            print("\nüëã OF Assistant Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except Exception as e:
            logger.log_error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üî• DeepSeek-R1 OF Assistant Bot")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot_instance = OFAssistantBot()
    
    if await bot_instance.initialize():
        await bot_instance.start_polling()
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ .env")
        sys.exit(1)

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8+")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    env_file = Path(".env")
    if not env_file.exists():
        print("‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:")
        print("TELEGRAM_BOT_TOKEN=your_bot_token")
        print("DEEPSEEK_API_KEY=your_deepseek_key")
        return False
    
    return True

if __name__ == "__main__":
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        if not check_environment():
            sys.exit(1)
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        asyncio.run(main())
        
    except KeyboardInterrupt:
        print("\nüëã –ü–æ–∫–∞!")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 