#!/usr/bin/env python3
"""
–ë–ï–ó–û–ü–ê–°–ù–´–ô –ó–ê–ü–£–°–ö TELEGRAM STARS/TON –ë–û–¢–ê
–†–µ—à–∞–µ—Ç –≤—Å–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
"""

import os
import sys
import time
import subprocess
from datetime import datetime

def print_header():
    """–í—ã–≤–µ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("=" * 70)
    print("üî• –ë–ï–ó–û–ü–ê–°–ù–´–ô –ó–ê–ü–£–°–ö TELEGRAM STARS/TON –ë–û–¢–ê üî•")
    print("=" * 70)
    print(f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Python"""
    print("üêç –ü–†–û–í–ï–†–ö–ê PYTHON:")
    print(f"‚úÖ –í–µ—Ä—Å–∏—è Python: {sys.version}")
    
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ!")
        return False
    return True

def install_missing_packages():
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã"""
    print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ò –£–°–¢–ê–ù–û–í–ö–ê –ü–ê–ö–ï–¢–û–í:")
    print("-" * 40)
    
    packages_to_check = [
        ("telebot", "pyTelegramBotAPI==4.14.0"),
        ("requests", "requests==2.31.0"),
        ("dotenv", "python-dotenv==1.0.0"),
        ("psutil", "psutil")
    ]
    
    for module, package in packages_to_check:
        try:
            __import__(module)
            print(f"‚úÖ {package}")
        except ImportError:
            print(f"‚ùå {package} - –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú...")
            try:
                subprocess.run([sys.executable, "-m", "pip", "install", package], 
                             check=True, capture_output=True, text=True)
                print(f"‚úÖ {package} - –£–°–¢–ê–ù–û–í–õ–ï–ù")
            except subprocess.CalledProcessError:
                print(f"‚ö†Ô∏è {package} - –ù–ï –£–î–ê–õ–û–°–¨ –£–°–¢–ê–ù–û–í–ò–¢–¨")

def check_bot_token():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞"""
    print("\nüîë –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê –ë–û–¢–ê:")
    print("-" * 30)
    
    token = os.getenv('BOT_TOKEN')
    if not token:
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω:")
        print("   set BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å")
        return False
    
    # –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–∫–µ–Ω–∞
    if ':' not in token or len(token) < 30:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞!")
        return False
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: ...{token[-8:]}")
    return True

def kill_conflicting_processes():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"""
    print("\nüî™ –û–°–¢–ê–ù–û–í–ö–ê –ö–û–ù–§–õ–ò–ö–¢–£–Æ–©–ò–• –ü–†–û–¶–ï–°–°–û–í:")
    print("-" * 45)
    
    try:
        import psutil
        current_pid = os.getpid()
        killed = 0
        
        for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
            try:
                if proc.info['name'] and 'python' in proc.info['name'].lower():
                    cmdline = proc.info['cmdline']
                    if cmdline and any('bot' in str(arg).lower() or 'telegram' in str(arg).lower() for arg in cmdline):
                        if proc.info['pid'] != current_pid:
                            print(f"üî™ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PID {proc.info['pid']}")
                            proc.terminate()
                            killed += 1
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
        
        if killed > 0:
            print(f"‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {killed} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
            time.sleep(3)  # –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        else:
            print("‚ÑπÔ∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except ImportError:
        print("‚ö†Ô∏è psutil –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")

def test_telegram_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API"""
    print("\nüì° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM API:")
    print("-" * 35)
    
    try:
        import telebot
        
        token = os.getenv('BOT_TOKEN')
        if not token:
            return False
        
        bot = telebot.TeleBot(token)
        
        # –û—á–∏—Å—Ç–∫–∞ webhook
        try:
            bot.remove_webhook()
            print("‚úÖ Webhook –æ—á–∏—â–µ–Ω")
        except:
            pass
        
        # –¢–µ—Å—Ç API
        me = bot.get_me()
        print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: @{me.username}")
        print(f"‚úÖ Bot ID: {me.id}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {e}")
        return False

def create_env_file():
    """–°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print("\nüìÑ –°–û–ó–î–ê–ù–ò–ï .ENV –§–ê–ô–õ–ê:")
    print("-" * 25)
    
    env_content = f"""# Telegram Bot Configuration
BOT_TOKEN={os.getenv('BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')}
ADMIN_USER_IDS={os.getenv('ADMIN_USER_IDS', '377917978')}

# TON Wallet for payments
TON_WALLET=UQA4rDEmGdIYKcrjEDwfZGLnISYd-gCYLEpcbSdwcuAW_FXB

# Monetization Settings
TEMPLATE_USAGE_RATIO=0.85
FREE_TRIAL_MESSAGES=50
EXPLICIT_CONTENT_ENABLED=true

# Cache Settings
CACHE_SIZE=15000
CACHE_TTL_HOURS=336

# Revenue Targets
DAILY_REVENUE_TARGET=100.0
MONTHLY_REVENUE_TARGET=3000.0
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .env: {e}")

def run_bot():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"""
    print("\nüöÄ –ó–ê–ü–£–°–ö –ë–û–¢–ê:")
    print("-" * 15)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç–µ—Ä
        exec(open('start_telegram_bot_fixed.py').read())
        
    except FileNotFoundError:
        print("‚ùå start_telegram_bot_fixed.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—É—é –≤–µ—Ä—Å–∏—é...")
        
        try:
            from monetized_bot import MonetizedBot
            bot = MonetizedBot()
            
            print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print("üî• –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            print("üì± –ù–∞—á–Ω–∏—Ç–µ —á–∞—Ç –≤ Telegram!")
            print("‚èπÔ∏è –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            
            bot.bot.polling(none_stop=True, timeout=60)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
            return False
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_header()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    checks = [
        ("Python –≤–µ—Ä—Å–∏—è", check_python_version),
        ("–ü–∞–∫–µ—Ç—ã", lambda: (install_missing_packages(), True)[1]),
        ("–¢–æ–∫–µ–Ω –±–æ—Ç–∞", check_bot_token),
        ("–ü—Ä–æ—Ü–µ—Å—Å—ã", lambda: (kill_conflicting_processes(), True)[1]),
        ("Telegram API", test_telegram_api),
        (".env —Ñ–∞–π–ª", lambda: (create_env_file(), True)[1]),
    ]
    
    print("üîç –ü–†–ï–î–ó–ê–ü–£–°–ö–û–í–´–ï –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 30)
    
    all_passed = True
    for name, check_func in checks:
        try:
            result = check_func()
            if result is False:
                all_passed = False
        except Exception as e:
            print(f"‚ùå {name}: –û—à–∏–±–∫–∞ - {e}")
            all_passed = False
    
    if not all_passed:
        print("\nüö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        print("üìù –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        sys.exit(1)
    
    print("\n‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
    print("üéâ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
    
    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    for i in range(3, 0, -1):
        print(f"üöÄ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ {i}...")
        time.sleep(1)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        run_bot()
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("\nüìû –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main() 