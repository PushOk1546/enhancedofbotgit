#!/usr/bin/env python3
"""
üî• UNIFIED OF ASSISTANT BOT WITH DEEPSEEK üî•
–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –±–æ—Ç —Å DeepSeek AI –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –¥—É–±–ª–µ–π
"""

import asyncio
import sys
import os
import json
import time
from typing import Optional, Dict, Any
from datetime import datetime

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç TeleBot
try:
    from telebot.async_telebot import AsyncTeleBot
    import telebot.types as types
    print("‚úÖ TeleBot –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ TeleBot: {e}")
    sys.exit(1)

# –ò–º–ø–æ—Ä—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
try:
    from config import config
    from enhanced_logging import BotLogger
    from deepseek_integration import generate_reply_variants
    print("‚úÖ –ú–æ–¥—É–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}")
    sys.exit(1)

class UnifiedBotDeepSeek:
    """–ï–¥–∏–Ω—ã–π –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ —Å DeepSeek AI"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        # –õ–æ–≥–≥–µ—Ä
        self.logger = BotLogger(
            log_dir="logs",
            log_file="unified_bot_deepseek.log",
            logger_name="UnifiedBotDeepSeek"
        )
        
        self.logger.log_info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Unified Bot —Å DeepSeek AI...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
        if not config.TELEGRAM_BOT_TOKEN:
            self.logger.log_error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
            raise ValueError("TELEGRAM_BOT_TOKEN –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
        
        if not config.DEEPSEEK_API_KEY:
            self.logger.log_error("‚ùå DEEPSEEK_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
            raise ValueError("DEEPSEEK_API_KEY –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DeepSeek AI")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
        try:
            self.bot = AsyncTeleBot(
                token=config.TELEGRAM_BOT_TOKEN,
                parse_mode='HTML'
            )
            self.logger.log_info("‚úÖ AsyncTeleBot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
            raise
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stats = {
            'messages_processed': 0,
            'start_time': datetime.now(),
            'users': set(),
            'errors': 0,
            'nsfw_requests': 0,
            'deepseek_calls': 0
        }
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self._register_handlers()
        
        self.logger.log_info("üöÄ Unified Bot —Å DeepSeek –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        
        @self.bot.message_handler(commands=['start'])
        async def handle_start(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
            try:
                user_id = message.from_user.id
                username = message.from_user.username or "Unknown"
                self.stats['users'].add(user_id)
                
                self.logger.log_info(f"üë§ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (@{username})")
                
                welcome_text = (
                    f"üî• <b>–ü—Ä–∏–≤–µ—Ç! –Ø OF Assistant Bot —Å DeepSeek AI</b>\n\n"
                    f"üé≠ <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>\n"
                    f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É—é DeepSeek AI - –±–æ–ª–µ–µ –ª–æ—è–ª—å–Ω—ã–π –∫ NSFW –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞—é —Å–º–µ–ª—ã–µ –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n"
                    f"‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —ç—Ä–æ—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Ñ–ª–∏—Ä—Ç\n\n"
                    f"üî• <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
                    f"‚Ä¢ /reply &lt;—Å–æ–æ–±—â–µ–Ω–∏–µ&gt; - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤\n"
                    f"‚Ä¢ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n"
                    f"‚Ä¢ /help - —Å–ø—Ä–∞–≤–∫–∞\n\n"
                    f"üíã <b>–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å /reply –∏ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!</b>\n"
                    f"<i>–ü—Ä–∏–º–µ—Ä: /reply –ü—Ä–∏–≤–µ—Ç, –∫—Ä–∞—Å–∞–≤—á–∏–∫!</i>"
                )
                
                await self.bot.reply_to(message, welcome_text)
                
            except Exception as e:
                self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /start: {e}")
                await self.bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
        @self.bot.message_handler(commands=['help'])
        async def handle_help(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
            try:
                help_text = (
                    f"üìñ <b>OF Assistant Bot —Å DeepSeek AI</b>\n\n"
                    f"üé≠ <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞—é —Å–º–µ–ª—ã–π –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n"
                    f"‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ñ–ª–∏—Ä—Ç—É—é—â–∏–µ –æ—Ç–≤–µ—Ç—ã\n"
                    f"‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —ç—Ä–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–º—ã\n"
                    f"‚Ä¢ –ù–µ —Ü–µ–Ω–∑—É—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö\n\n"
                    f"üî• <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
                    f"‚Ä¢ <code>/start</code> - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                    f"‚Ä¢ <code>/reply &lt;—Ç–µ–∫—Å—Ç&gt;</code> - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤\n"
                    f"‚Ä¢ <code>/stats</code> - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
                    f"‚Ä¢ <code>/help</code> - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
                    f"üí° <b>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>\n"
                    f"‚Ä¢ <code>/reply –ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?</code>\n"
                    f"‚Ä¢ <code>/reply –°–∫—É—á–∞—é –ø–æ —Ç–µ–±–µ...</code>\n"
                    f"‚Ä¢ <code>/reply –ß—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º?</code>\n\n"
                    f"üîû <i>–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ 18+</i>"
                )
                
                await self.bot.reply_to(message, help_text)
                
            except Exception as e:
                self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /help: {e}")
                await self.bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.")
        
        @self.bot.message_handler(commands=['reply'])
        async def handle_reply(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reply —Å DeepSeek AI"""
            try:
                user_id = message.from_user.id
                username = message.from_user.username or "Unknown"
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                command_parts = message.text.split(' ', 1)
                if len(command_parts) < 2:
                    await self.bot.reply_to(
                        message, 
                        "‚ùå <b>–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞</b>\n\n"
                        "üí° <b>–ü—Ä–∏–º–µ—Ä:</b>\n"
                        "<code>/reply –ü—Ä–∏–≤–µ—Ç, –∫—Ä–∞—Å–∞–≤—á–∏–∫!</code>\n"
                        "<code>/reply –°–∫—É—á–∞—é –ø–æ —Ç–µ–±–µ...</code>"
                    )
                    return
                
                user_message = command_parts[1].strip()
                
                if len(user_message) < 3:
                    await self.bot.reply_to(message, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞).")
                    return
                
                if len(user_message) > 500:
                    await self.bot.reply_to(message, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤).")
                    return
                
                self.logger.log_info(f"üí¨ DeepSeek –∑–∞–ø—Ä–æ—Å –æ—Ç {user_id} (@{username}): {user_message[:50]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ NSFW –∫–æ–Ω—Ç–µ–Ω—Ç
                is_nsfw = any(word in user_message.lower() for word in [
                    '—Å–µ–∫—Å', '–ª—é–±–æ–≤—å', '—Å—Ç—Ä–∞—Å—Ç—å', '–∂–µ–ª–∞–Ω–∏–µ', '—Ö–æ—á—É', '–Ω–æ—á—å', '–ø–æ—Å—Ç–µ–ª—å', 
                    '–∫—Ä–∞—Å–∏–≤', '–≥–æ—Ä—è—á', '–≤–æ–∑–±—É–∂–¥', '—Å–∫—É—á–∞—é', '–º–µ—á—Ç–∞—é'
                ])
                if is_nsfw:
                    self.stats['nsfw_requests'] += 1
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                processing_msg = await self.bot.reply_to(
                    message, 
                    "üî• <b>DeepSeek AI –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤...</b>\n"
                    "<i>–°–æ–∑–¥–∞—é —Å–º–µ–ª—ã–π –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç</i> üé≠"
                )
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã —á–µ—Ä–µ–∑ DeepSeek
                start_time = time.time()
                reply_variants = await generate_reply_variants(user_message, 3)
                generation_time = time.time() - start_time
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                self.stats['messages_processed'] += 1
                self.stats['deepseek_calls'] += 1
                
                if reply_variants and len(reply_variants) > 0:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
                    response_text = f"üí´ <b>DeepSeek AI —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è:</b>\n<i>\"{user_message}\"</i>\n\n"
                    
                    for i, variant in enumerate(reply_variants[:3], 1):
                        # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                        emoji = "üî•" if is_nsfw else "üí≠"
                        response_text += f"{emoji} <b>{i}.</b> {variant}\n\n"
                    
                    response_text += f"‚è±Ô∏è <i>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è: {generation_time:.1f}—Å | Powered by DeepSeek AI</i>"
                    
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    await self.bot.delete_message(message.chat.id, processing_msg.message_id)
                    await self.bot.reply_to(message, response_text)
                    
                    self.logger.log_info(f"‚úÖ DeepSeek –æ—Ç–≤–µ—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è {user_id} –∑–∞ {generation_time:.1f}—Å")
                    
                else:
                    await self.bot.edit_message_text(
                        "‚ùå <b>DeepSeek AI –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã</b>\n\n"
                        "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                        "‚Ä¢ –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å\n"
                        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É",
                        message.chat.id,
                        processing_msg.message_id
                    )
                    self.logger.log_warning(f"‚ö†Ô∏è DeepSeek –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç—ã –¥–ª—è {user_id}")
                
            except Exception as e:
                self.stats['errors'] += 1
                self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /reply: {e}")
                await self.bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
        @self.bot.message_handler(commands=['stats'])
        async def handle_stats(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
            try:
                uptime = datetime.now() - self.stats['start_time']
                uptime_str = f"{uptime.days}–¥ {uptime.seconds//3600}—á {(uptime.seconds%3600)//60}–º"
                
                stats_text = (
                    f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ DeepSeek Bot</b>\n\n"
                    f"ü§ñ <b>AI –î–≤–∏–∂–æ–∫:</b> DeepSeek Chat\n"
                    f"‚è∞ <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> {uptime_str}\n"
                    f"üí¨ <b>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</b> {self.stats['messages_processed']}\n"
                    f"üî• <b>DeepSeek –≤—ã–∑–æ–≤–æ–≤:</b> {self.stats['deepseek_calls']}\n"
                    f"üîû <b>NSFW –∑–∞–ø—Ä–æ—Å–æ–≤:</b> {self.stats['nsfw_requests']}\n"
                    f"üë• <b>–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {len(self.stats['users'])}\n"
                    f"‚ùå <b>–û—à–∏–±–æ–∫:</b> {self.stats['errors']}\n"
                    f"üîã <b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–µ–Ω\n\n"
                    f"üìà <b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b>\n"
                    f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è DeepSeek: ~2-4—Å\n"
                    f"‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ NSFW: ‚úÖ\n"
                    f"‚Ä¢ –¶–µ–Ω–∑—É—Ä–∞: ‚ùå (–æ—Ç–∫–ª—é—á–µ–Ω–∞)\n"
                    f"‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: 99.9%"
                )
                
                await self.bot.reply_to(message, stats_text)
                
            except Exception as e:
                self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /stats: {e}")
                await self.bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        
        @self.bot.message_handler(func=lambda message: True)
        async def handle_unknown(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
            try:
                unknown_text = (
                    f"‚ùì <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>\n\n"
                    f"üí° <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
                    f"‚Ä¢ /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                    f"‚Ä¢ /reply &lt;—Å–æ–æ–±—â–µ–Ω–∏–µ&gt; - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤\n"
                    f"‚Ä¢ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
                    f"‚Ä¢ /help - —Å–ø—Ä–∞–≤–∫–∞\n\n"
                    f"üé≠ <i>–Ø —Å–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö —Å –ø–æ–º–æ—â—å—é DeepSeek AI</i>"
                )
                
                await self.bot.reply_to(message, unknown_text)
                
            except Exception as e:
                self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_unknown: {e}")
    
    async def start_polling(self):
        """–ó–∞–ø—É—Å–∫ polling —Ä–µ–∂–∏–º–∞"""
        try:
            self.logger.log_info("üöÄ –ó–∞–ø—É—Å–∫ polling —Ä–µ–∂–∏–º–∞...")
            await self.bot.polling(non_stop=True)
        except Exception as e:
            self.logger.log_error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ polling: {e}")
            raise
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        try:
            self.logger.log_info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ DeepSeek Bot...")
            await self.bot.stop_polling()
            self.logger.log_info("‚úÖ DeepSeek Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            self.logger.log_error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("üî• Unified OF Assistant Bot —Å DeepSeek AI")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        bot = UnifiedBotDeepSeek()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("üöÄ –ó–∞–ø—É—Å–∫ DeepSeek –±–æ—Ç–∞...")
        await bot.start_polling()
        
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        if 'bot' in locals():
            await bot.stop()
        print("‚úÖ DeepSeek –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 