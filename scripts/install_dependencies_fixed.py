#!/usr/bin/env python3
"""
üîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –£–°–¢–ê–ù–û–í–©–ò–ö –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô üîß
–£—Å—Ç—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–∞–∫–µ—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
"""

import sys
import subprocess
import os

def print_header():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô üîß")
    print("=" * 50)

def upgrade_pip():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"""
    try:
        print("‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip...")
        subprocess.run([sys.executable, "-m", "pip", "install", "--upgrade", "pip"], check=True)
        print("‚úÖ pip –æ–±–Ω–æ–≤–ª–µ–Ω")
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å pip: {e}")
        return False

def uninstall_conflicting_packages():
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤"""
    print("\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤...")
    
    conflicting_packages = [
        "python-dotenv",
        "telebot",
        "openai",
        "httpx",
        "aiofiles",
        "pydantic",
        "pytest",
        "cryptography"
    ]
    
    for package in conflicting_packages:
        try:
            subprocess.run([sys.executable, "-m", "pip", "uninstall", package, "-y"], 
                         capture_output=True, check=False)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {package}")
        except:
            pass

def install_clean_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–∏—Å—Ç—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    dependencies = [
        "pyTelegramBotAPI>=4.14.0",
        "requests>=2.28.0", 
        "psutil>=5.9.0",
        "python-dotenv>=1.0.1",
        "groq>=0.4.0",
        "cryptography>=41.0.0",
        "aiohttp>=3.8.0"
    ]
    
    success_count = 0
    failed_packages = []
    
    for package in dependencies:
        try:
            print(f"üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {package}...")
            result = subprocess.run(
                [sys.executable, "-m", "pip", "install", package, "--no-deps"],
                capture_output=True,
                text=True,
                check=True
            )
            print(f"‚úÖ {package}: –£–°–¢–ê–ù–û–í–õ–ï–ù")
            success_count += 1
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package}")
            failed_packages.append(package)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    try:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        subprocess.run([sys.executable, "-m", "pip", "install", "--upgrade", 
                       "setuptools", "wheel", "certifi"], check=True)
        print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except:
        print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    
    return success_count, failed_packages

def verify_installation():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò")
    print("=" * 30)
    
    critical_modules = [
        ("telebot", "import telebot"),
        ("requests", "import requests"),
        ("psutil", "import psutil"),
        ("dotenv", "import dotenv"),
        ("groq", "import groq")
    ]
    
    success_count = 0
    
    for module_name, import_code in critical_modules:
        try:
            exec(import_code)
            print(f"‚úÖ {module_name}: OK")
            success_count += 1
        except ImportError:
            print(f"‚ùå {module_name}: –û–¢–°–£–¢–°–¢–í–£–ï–¢")
        except Exception as e:
            print(f"‚ö†Ô∏è {module_name}: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - {e}")
            success_count += 1  # –°—á–∏—Ç–∞–µ–º –∫–∞–∫ —É—Å–ø–µ—à–Ω—ã–π –µ—Å–ª–∏ –º–æ–¥—É–ª—å –µ—Å—Ç—å
    
    print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {success_count}/{len(critical_modules)} –º–æ–¥—É–ª–µ–π")
    return success_count >= 3  # –ú–∏–Ω–∏–º—É–º 3 –∏–∑ 5 –º–æ–¥—É–ª–µ–π –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å

def create_minimal_env_template():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ .env.template"""
    env_content = """# Ultimate Enterprise Bot - Minimal Configuration
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è

# –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
BOT_TOKEN=your_telegram_bot_token_here
ADMIN_USER_IDS=377917978

# –û–ü–¶–ò–û–ù–ê–õ–¨–ù–û  
GROQ_KEY=your_groq_api_key_here
"""
    
    try:
        with open(".env.template.minimal", "w", encoding="utf-8") as f:
            f.write(env_content)
        print("‚úÖ –°–æ–∑–¥–∞–Ω .env.template.minimal")
    except:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .env.template.minimal")

def main():
    print_header()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    upgrade_pip()
    
    # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã
    uninstall_conflicting_packages()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∏—Å—Ç—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    success_count, failed_packages = install_clean_dependencies()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if verify_installation():
        print("\nüéâ –£–°–¢–ê–ù–û–í–ö–ê –£–°–ü–ï–®–ù–ê!")
        print("‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        create_minimal_env_template()
        
        print("\nüöÄ –ì–û–¢–û–í–û –ö –ó–ê–ü–£–°–ö–£!")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º BOT_TOKEN")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python simple_start.py")
        print("3. –ò–ª–∏: python ultimate_enterprise_launcher.py")
        
    else:
        print("\n‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê")
        print("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é: python simple_start.py")
    
    if failed_packages:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: {', '.join(failed_packages)}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:")
        for pkg in failed_packages:
            print(f"   pip install {pkg}")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é: pip install pyTelegramBotAPI requests psutil") 