#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –æ—à–∏–±–∫–∏ "message can't be edited" –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
"""

import os
import sys
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def test_admin_commands_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ admin_commands"""
    try:
        from admin_commands import AdminCommands
        print("‚úÖ admin_commands.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_error_handling():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    try:
        from admin_commands import AdminCommands
        import telebot
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        class MockBot:
            def __init__(self):
                self.username = "test_bot"
            
            def edit_message_text(self, *args, **kwargs):
                # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                raise Exception("message can't be edited")
            
            def send_message(self, *args, **kwargs):
                return True
            
            def answer_callback_query(self, *args, **kwargs):
                return True
            
            def get_me(self):
                class Me:
                    username = "test_bot"
                return Me()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä AdminCommands
        mock_bot = MockBot()
        admin_commands = AdminCommands(mock_bot)
        
        print("‚úÖ AdminCommands —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        methods_to_check = [
            'show_admin_panel_callback',
            'show_users_callback', 
            'show_revenue_callback',
            'show_grant_menu',
            'show_test_mode_menu',
            'show_ton_confirmation_menu',
            'show_stats_callback',
            'health_check_callback',
            'show_admin_help_callback'
        ]
        
        for method_name in methods_to_check:
            if hasattr(admin_commands, method_name):
                print(f"‚úÖ –ú–µ—Ç–æ–¥ {method_name} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå –ú–µ—Ç–æ–¥ {method_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        print("\nüîß –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö:")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π call –æ–±—ä–µ–∫—Ç
        class MockCall:
            def __init__(self):
                self.id = "test_call"
                self.data = "admin_panel"
                self.from_user = MockUser()
                self.message = MockMessage()
        
        class MockUser:
            def __init__(self):
                self.id = 377917978
                self.username = "admin"
                self.first_name = "Admin"
        
        class MockMessage:
            def __init__(self):
                self.chat = MockChat()
                self.message_id = 123
        
        class MockChat:
            def __init__(self):
                self.id = 377917978
        
        mock_call = MockCall()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
        try:
            admin_commands.show_admin_panel_callback(mock_call)
            print("‚úÖ show_admin_panel_callback –æ–±—Ä–∞–±–æ—Ç–∞–ª –æ—à–∏–±–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        except Exception as e:
            print(f"‚ùå show_admin_panel_callback: {e}")
        
        try:
            admin_commands.show_users_callback(mock_call)
            print("‚úÖ show_users_callback –æ–±—Ä–∞–±–æ—Ç–∞–ª –æ—à–∏–±–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        except Exception as e:
            print(f"‚ùå show_users_callback: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üî• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô ADMIN COMMANDS")
    print("="*60)
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞
    if not test_admin_commands_import():
        return False
    
    # –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    if not test_error_handling():
        return False
    
    print("\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("="*40)
    print("‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –û—à–∏–±–∫–∏ 'message can't be edited' –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
    print("‚úÖ –í—Å–µ callback –º–µ—Ç–æ–¥—ã –∑–∞—â–∏—â–µ–Ω—ã try/except")
    print("‚úÖ Fallback –Ω–∞ send_message —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ AdminCommands –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    
    print("\nüöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ show_admin_panel")
    print("‚Ä¢ –°–æ–∑–¥–∞–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π show_admin_panel_callback") 
    print("‚Ä¢ –í—Å–µ callback –º–µ—Ç–æ–¥—ã –∑–∞—â–∏—â–µ–Ω—ã try/except")
    print("‚Ä¢ Fallback –Ω–∞ send_message –ø—Ä–∏ –æ—à–∏–±–∫–µ edit_message_text")
    print("‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ handle_admin_callback_query")
    
    return True

if __name__ == "__main__":
    success = main()
    print(f"\n{'‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ' if success else '‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ'}")
    input("–ù–∞–∂–º–∏—Ç–µ ENTER –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    sys.exit(0 if success else 1) 